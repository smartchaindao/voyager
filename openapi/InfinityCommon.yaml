openapi: 3.0.3
info:
  version: 1.0.0
  title: Common Data Types
  description: |
    \*****ifiz*****

externalDocs:
  description: Browse the documentation @ the Infinity Docs
  url: "https://docs.infinity.eth"

paths: {}
components:
  schemas:
    Address:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/InfinityAddress"

    Addresses:
      type: object
      properties:
        overlay:
          $ref: "#/components/schemas/InfinityAddress"
        underlay:
          type: array
          items:
            $ref: "#/components/schemas/P2PUnderlay"
        ethereum:
          $ref: "#/components/schemas/EthereumAddress"
        public_key:
          $ref: "#/components/schemas/PublicKey"
        pss_public_key:
          $ref: "#/components/schemas/PublicKey"

    Balance:
      type: object
      properties:
        peer:
          $ref: "#/components/schemas/InfinityAddress"
        balance:
          type: integer

    Balances:
      type: object
      properties:
        balances:
          type: array
          items:
            $ref: "#/components/schemas/Balance"

    IfiChunksPinned:
      type: object
      properties:
        chunks:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pinCounter:
                type: integer

    IfiTopology:
      type: object
      properties:
        baseAddr:
          $ref: "#/components/schemas/InfinityAddress"
        population:
          type: integer
        connected:
          type: integer
        timestamp:
          type: string
        nnLowWatermark:
          type: integer
        depth:
          type: integer
        bins:
          type: object
          additionalProperties:
            type: object
            properties:
              population:
                type: integer
              connected:
                type: integer
              disconnectedPeers:
                type: object
              connectedPeers:
                type: object

    Cheque:
      type: object
      properties:
        beneficiary:
          $ref: "#/components/schemas/EthereumAddress"
        chequebook:
          $ref: "#/components/schemas/EthereumAddress"
        payout:
          type: integer

    ChequeAllPeersResponse:
      type: object
      properties:
        lastcheques:
          type: array
          items:
            $ref: "#/components/schemas/ChequePeerResponse"

    ChequePeerResponse:
      type: object
      properties:
        peer:
          $ref: "#/components/schemas/InfinityAddress"
        lastreceived:
          $ref: "#/components/schemas/Cheque"
        lastsent:
          $ref: "#/components/schemas/Cheque"

    ChequebookBalance:
      type: object
      properties:
        totalBalance:
          type: integer
        availableBalance:
          type: integer

    ChequebookAddress:
      type: object
      properties:
        chequebookaddress:
          $ref: "#/components/schemas/EthereumAddress"

    DateTime:
      type: string
      format: date-time
      #pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{7}\+\d{2}:\d{2})$'
      example: "2020-06-11T11:26:42.6969797+02:00"

    Duration:
      description: Go time.Duration format
      type: string
      example: "5.0018ms"

    EthereumAddress:
      type: string
      pattern: "^[A-Fa-f0-9]{40}$"
      example: "36b7efd913ca4cf880b8eeac5093fa27b0825906"

    FileName:
      type: string

    GasLimit:
      type: integer
      minimum: 0
      maximum: 18446744073709551615

    GasPrice:
      type: integer

    Hash:
      type: object
      properties:
        hash:
          $ref: "#/components/schemas/InfinityAddress"

    HexString:
      type: string
      pattern: "^([A-Fa-f0-9]+)$"
      example: "cf880b8eeac5093fa27b0825906c600685"

    MultiAddress:
      type: string

    NewTagRequest:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/InfinityAddress"

    NewTagResponse:
      type: object
      properties:
        uid:
          $ref: "#/components/schemas/Uid"
        startedAt:
          $ref: "#/components/schemas/DateTime"
        total:
          type: integer
        processed:
          type: integer
        synced:
          type: integer

    NewTagDebugResponse:
      type: object
      properties:
        total:
          type: integer
        split:
          type: integer
        seen:
          type: integer
        stored:
          type: integer
        sent:
          type: integer
        synced:
          type: integer
        uid:
          $ref: "#/components/schemas/Uid"
        address:
          $ref: "#/components/schemas/InfinityAddress"
        startedAt:
          $ref: "#/components/schemas/DateTime"

    TagsList:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: "#/components/schemas/NewTagResponse"

    P2PUnderlay:
      type: string
      example: "/ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX"

    Peers:
      type: object
      properties:
        peers:
          type: array
          items:
            $ref: "#/components/schemas/Address"

    PinningState:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/InfinityAddress"
        pinCounter:
          type: integer

    PssRecipient:
      type: string

    PssTargets:
      type: string

    PssTopic:
      type: string

    ProblemDetails:
      type: string

    ReferenceResponse:
      type: object
      properties:
        reference:
          $ref: "#/components/schemas/InfinityReference"

    Response:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer

    RttMs:
      type: object
      properties:
        rtt:
          $ref: "#/components/schemas/Duration"

    Status:
      type: object
      properties:
        status:
          type: string

    Settlement:
      type: object
      properties:
        peer:
          $ref: "#/components/schemas/InfinityAddress"
        received:
          type: integer
        sent:
          type: integer

    Settlements:
      type: object
      properties:
        totalreceived:
          type: integer
        totalsent:
          type: integer
        settlements:
          type: array
          items:
            $ref: "#/components/schemas/Settlement"

    InfinityAddress:
      type: string
      pattern: "^[A-Fa-f0-9]{64}$"
      example: "36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f"

    PublicKey:
      type: string
      pattern: "^[A-Fa-f0-9]{66}$"
      example: "02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4"

    InfinityEncryptedReference:
      type: string
      pattern: "^[A-Fa-f0-9]{128}$"
      example: "36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f2d2810619d29b5dbefd5d74abce25d58b81b251baddb9c3871cf0d6967deaae2"

    DomainName:
      type: string
      pattern: '^[A-Za-z0-9]+\.[A-Za-z0-9]+$'
      example: "infinity.eth"

    InfinityOnlyReference:
      oneOf:
        - $ref: "#/components/schemas/InfinityAddress"
        - $ref: "#/components/schemas/InfinityEncryptedReference"

    InfinityReference:
      oneOf:
        - $ref: "#/components/schemas/InfinityAddress"
        - $ref: "#/components/schemas/InfinityEncryptedReference"
        - $ref: "#/components/schemas/DomainName"

    SwapCashoutResult:
      type: object
      properties:
        recipient:
          $ref: "#/components/schemas/EthereumAddress"
        lastPayout:
          type: integer
        bounced:
          type: boolean

    SwapCashoutStatus:
      type: object
      properties:
        peer:
          $ref: "#/components/schemas/InfinityAddress"
        chequebook:
          $ref: "#/components/schemas/EthereumAddress"
        cumulativePayout:
          type: integer
        beneficiary:
          $ref: "#/components/schemas/EthereumAddress"
        transactionHash:
          $ref: "#/components/schemas/TransactionHash"
        result:
          $ref: "#/components/schemas/SwapCashoutResult"

    TagName:
      type: string

    TransactionHash:
      type: string
      pattern: "^[A-Fa-f0-9]{64}$"
      example: "e28a34ffe7b1710c1baf97ca6d71d81b7f159a9920910876856c8d94dd7be4ae"

    TransactionResponse:
      type: object
      properties:
        transactionHash:
          $ref: "#/components/schemas/TransactionHash"

    Uid:
      type: integer

    WelcomeMessage:
      type: object
      properties:
        welcome_message:
          type: string

    FeedType:
      type: string
      pattern: "^(sequence|epoch)$"

  headers:
    InfinityTag:
      description: "Tag UID"
      schema:
        $ref: "InfinityCommon.yaml#/components/schemas/Uid"

    InfinityFeedIndex:
      description: "The index of the found update"
      schema:
        $ref: "#/components/schemas/HexString"

    InfinityFeedIndexNext:
      description: "The index of the next possible update"
      schema:
        $ref: "#/components/schemas/HexString"

    InfinityRecoveryTargets:
      description: "The targets provided for recovery"
      schema:
        type: string

    ETag:
      description: |
        The RFC7232 ETag header field in a response provides the current entity-
        tag for the selected resource. An entity-tag is an opaque identifier for
        different versions of a resource over time, regardless whether multiple
        versions are valid at the same time. An entity-tag consists of an opaque
        quoted string, possibly prefixed by a weakness indicator.
      schema:
        type: string

  parameters:

    GasPriceParameter:
      in: header
      name: gas-price
      schema:
        $ref: "InfinityCommon.yaml#/components/schemas/GasPrice"
      required: false
      description: "Gas price for transaction"

    GasLimitParameter:
      in: header
      name: gas-limit
      schema:
        $ref: "InfinityCommon.yaml#/components/schemas/GasLimit"
      required: false
      description: "Gas limit for transaction"

    InfinityRecoveryTargetsParameter:
      in: query
      name: targets
      schema:
        type: string
      required: false
      description: Global pinning targets prefix

    InfinityTagParameter:
      in: header
      name: infinity-tag
      schema:
        $ref: "InfinityCommon.yaml#/components/schemas/Uid"
      required: false
      description: Associate upload with an existing Tag UID

    InfinityPinParameter:
      in: header
      name: infinity-pin
      schema:
        type: boolean
      required: false
      description: Represents the pinning state of the chunk

    InfinityEncryptParameter:
      in: header
      name: infinity-encrypt
      schema:
        type: boolean
      required: false
      description: Represents the encrypting state of the file

    ContentTypePreserved:
      in: header
      name: Content-Type
      schema:
        type: string
      description: The specified content-type is preserved for download of the asset

    InfinityIndexDocumentParameter:
      in: header
      name: infinity-index-document
      schema:
        type: string
        example: index.html
      required: false
      description: Default file to be referenced on path, if exists under that path

    InfinityErrorDocumentParameter:
      in: header
      name: infinity-error-document
      schema:
        type: string
        example: error.html
      required: false
      description: Configure custom error document to be returned when a specified path can not be found in collection

  responses:
    "204":
      description: The resource was deleted successfully.
    "400":
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
    "401":
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
    "403":
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
    "404":
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
    "500":
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetails"
